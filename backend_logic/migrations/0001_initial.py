# Generated by Django 5.2.7 on 2025-10-22 09:16

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BursaryApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('student_name', models.CharField(max_length=200)),
                ('institution_name', models.CharField(max_length=200)),
                ('admission_number', models.CharField(max_length=50)),
                ('education_level', models.CharField(choices=[('primary', 'Primary School'), ('secondary', 'Secondary School'), ('college', 'College'), ('university', 'University')], max_length=20)),
                ('course_program', models.CharField(max_length=200)),
                ('year_of_study', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('annual_family_income', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('tuition_fee', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('amount_requested', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('family_status', models.CharField(choices=[('both_parents', 'Both Parents Alive'), ('single_parent', 'Single Parent'), ('orphan', 'Orphan'), ('guardian', 'Under Guardian')], max_length=20)),
                ('number_of_siblings', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('siblings_in_school', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('parent_guardian_name', models.CharField(max_length=200)),
                ('parent_guardian_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number')])),
                ('parent_guardian_occupation', models.CharField(max_length=100)),
                ('reason_for_application', models.TextField(max_length=1000)),
                ('previous_bursary_recipient', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], db_index=True, default='pending', help_text='Current status of the bursary application', max_length=20)),
                ('submitted_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when application was first submitted')),
                ('reviewed_at', models.DateTimeField(blank=True, help_text='Timestamp when application was reviewed', null=True)),
                ('reviewer_comments', models.TextField(blank=True, help_text='Comments from the reviewer about the application')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when record was last updated')),
            ],
            options={
                'verbose_name': 'Bursary Application',
                'verbose_name_plural': 'Bursary Applications',
                'ordering': ['-submitted_at'],
                'permissions': [('review_application', 'Can review bursary applications'), ('approve_application', 'Can approve bursary applications'), ('reject_application', 'Can reject bursary applications'), ('view_analytics', 'Can view application analytics')],
            },
        ),
        migrations.CreateModel(
            name='ApplicationStatusLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(blank=True, max_length=20)),
                ('new_status', models.CharField(max_length=20)),
                ('comments', models.TextField(blank=True)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_logs', to='backend_logic.bursaryapplication')),
            ],
            options={
                'verbose_name': 'Application Status Log',
                'verbose_name_plural': 'Application Status Logs',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('id_copy', 'ID Copy'), ('admission_letter', 'Admission Letter'), ('fee_structure', 'Fee Structure'), ('income_proof', 'Proof of Income'), ('parent_id', 'Parent/Guardian ID'), ('birth_certificate', 'Birth Certificate'), ('death_certificate', 'Death Certificate (if applicable)'), ('other', 'Other Document')], max_length=30)),
                ('file', models.FileField(upload_to='bursary_documents/%Y/%m/')),
                ('description', models.CharField(blank=True, max_length=200)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='backend_logic.bursaryapplication')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number')])),
                ('id_number', models.CharField(max_length=20, unique=True)),
                ('date_of_birth', models.DateField()),
                ('county', models.CharField(max_length=100)),
                ('sub_county', models.CharField(max_length=100)),
                ('ward', models.CharField(max_length=100)),
                ('village', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.AddField(
            model_name='bursaryapplication',
            name='user_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='backend_logic.userprofile'),
        ),
        migrations.AddIndex(
            model_name='bursaryapplication',
            index=models.Index(fields=['-submitted_at'], name='idx_submitted_at'),
        ),
        migrations.AddIndex(
            model_name='bursaryapplication',
            index=models.Index(fields=['status'], name='idx_status'),
        ),
        migrations.AddIndex(
            model_name='bursaryapplication',
            index=models.Index(fields=['created_at'], name='idx_created_at'),
        ),
        migrations.AddIndex(
            model_name='bursaryapplication',
            index=models.Index(fields=['education_level'], name='idx_edu_level'),
        ),
    ]
